START VOID FUNCTION merge_sort(Array<int> arr, int low, int high)
{
    int mid;
    if (low < high){
        //divide the array at mid and sort independently using merge sort
        mid=(low+high)/2;
        merge_sort(arr,low,mid);
        merge_sort(arr,mid+1,high);
        //merge or conquer sorted arrays
        merge(arr,low,high,mid);
    }
}
// Merge sort 


START FUNCTION void merge(Array<int> arr, int low, int high, int mid)
    int i; 
    int j;
    int k; 
    int c[50];
    i = low;
    k = low;
    j = mid + 1;
    while (i <= mid && j <= high) {
        if (arr[i] < arr[j]) 
        START IF
            c[k] = arr[i];
            k++;
            i++;
        END IF
        else  
        START ELSE
            c[k] = arr[j];
            k++;
            j++;
        END ELSE
        
    }
    while (i <= mid) 
    START WHILE
        c[k] = arr[i];
        k++;
        i++;
    END WHILE
    while (j <= high) 
    START WHILE
        c[k] = arr[j];
        k++;
        j++;
    END WHILE
    for (i = low; i < k; i++)  
    START FOR
        arr[i] = c[i];
    END FOR
END FUNCTION

// read input array and call mergesort
function int main()
START FUNCTION
    Array<Integer> myarray = new Array<int>(30);
    Integer num;
    print("Enter number of elements to be sorted:");
    num = read();
    print("Enter ") 
    print(num)
    print(" elements to be sorted:");
    for (int i = 0; i < num; i++) 
    START FOR
        myarray[i] = read();
    END FOR
    merge_sort(myarray, 0, num-1);
    print("Sorted array\n");
    for (int i = 0; i < num; i++)
    START FOR
        print(myarray[i])
        print("\t");
    END FOR
END FUNCTION