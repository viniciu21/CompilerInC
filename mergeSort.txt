function void merge_sort(array@int arr, int low, int high)
    int mid;
    if (low < high)
        //divide the array at mid and sort independently using merge sort
        mid=(low+high)/2;
        merge_sort(arr,low,mid);
        merge_sort(arr,mid+1,high);
        //merge or conquer sorted arrays
        merge(arr,low,high,mid);
    END IF
end function


function void merge(array@int arr, int low, int high, int mid)
    int i = 1 + 2; 
    int j;
    int k; 
    int c[50];
    i = low;
    k = low;
    j = mid + 1;
    while (i <= mid && j <= high) 
        if (arr[i] < arr[j]) 
            c[k] = arr[i];
            k++;
            i++;
        END IF
        else  
        
            c[k] = arr[j];
            k++;
            j++;
        END ELSE
        
    END WHILE
    
    while (i <= mid) 
    
        c[k] = arr[i];
        k++;
        i++;
    END WHILE
    while (j <= high) 
    
        c[k] = arr[j];
        k++;
        j++;
    END WHILE
    for (i = low; i < k; i++)  
    
        arr[i] = c[i];
    END FOR
END FUNCTION

function int main()

    int num;
    print("Enter number of elements to be sorted:");
    num = read();
    print("Enter "); 
    print(num);
    print(" elements to be sorted:");
    for (int i = 0; i < num; i++);
    
        myarray[i] = read();
    END FOR
    merge_sort(myarray, 0, num-1);
    print("Sorted array\n");
    for (int i = 0; i < num; i++)
    
        print(myarray[i]);
        print("\t");
    END FOR
END FUNCTION
